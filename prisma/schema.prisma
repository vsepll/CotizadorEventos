// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String?
  email     String   @unique
  password  String
  role      String   @default("client")
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  quotations  Quotation[]
}

model GlobalParameters {
  id                           Int     @id @default(1)
  defaultPlatformFee           Float
  defaultTicketingFee          Float
  defaultAdditionalServicesFee Float
  defaultCreditCardFee         Float
  defaultDebitCardFee          Float
  defaultCashFee               Float
  defaultCredentialsCost       Float
  defaultSupervisorsCost       Float
  defaultOperatorsCost         Float
  defaultMobilityCost          Float
  palco4FeePerTicket           Float
  lineCostPercentage           Float
  ticketingCostPerTicket       Float
}

model Quotation {
  id                  String   @id @default(cuid())
  name                String   // Nombre del evento
  eventType           String   // Tipo de evento
  totalAmount         Float    // Monto total
  ticketPrice         Float    // Precio de entrada
  platformFee         Float    // Comisión de plataforma
  ticketingFee        Float    // Comisión de ticketing
  additionalServices  Float    // Servicios adicionales
  paywayFees         Json     // Comisiones de medios de pago
  palco4Cost         Float    // Costo Palco 4
  lineCost           Float    // Costo de línea
  operationalCosts   Json     // Costos operativos
  totalRevenue       Float    // Ingresos totales
  totalCosts         Float    // Costos totales
  grossMargin        Float    // Margen bruto
  grossProfitability Float    // Rentabilidad bruta
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  user               User     @relation(fields: [userId], references: [id])
  userId             String
}

