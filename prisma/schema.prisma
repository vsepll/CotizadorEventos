generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String      @id @default(cuid())
  name       String?
  email      String      @unique
  password   String
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @default(now()) @updatedAt
  role       UserRole    @default(USER)
  quotations Quotation[]
}

model GlobalParameters {
  id                           Int   @id @default(1)
  defaultPlatformFee           Float
  defaultTicketingFee          Float
  defaultAdditionalServicesFee Float
  defaultCreditCardFee         Float
  defaultDebitCardFee          Float
  defaultCashFee               Float
  defaultCredentialsCost       Float
  defaultSupervisorsCost       Float
  defaultOperatorsCost         Float
  defaultMobilityCost          Float
  palco4FeePerTicket           Float
  lineCostPercentage           Float
  ticketingCostPerTicket       Float
}

model Quotation {
  id                 String         @id @default(cuid())
  name               String
  eventType          String
  totalAmount        Float
  ticketPrice        Float
  platformFee        Float
  ticketingFee       Float
  serviceChargeFee   Float
  additionalServices Float
  paywayFees         Json
  palco4Cost         Float
  lineCost           Float
  operationalCosts   Json
  totalRevenue       Float
  totalCosts         Float
  grossMargin        Float
  grossProfitability Float
  createdAt          DateTime       @default(now())
  updatedAt          DateTime       @updatedAt
  userId             String
  user               User           @relation(fields: [userId], references: [id])
  ticketSectors      TicketSector[]
}

model TicketVariation {
  id       String       @id @default(cuid())
  name     String
  price    Float
  quantity Int
  sectorId String
  sector   TicketSector @relation(fields: [sectorId], references: [id], onDelete: Cascade)
}

model TicketSector {
  id             String            @id @default(cuid())
  name           String
  estimatedSales Float
  quotationId    String
  quotation      Quotation         @relation(fields: [quotationId], references: [id], onDelete: Cascade)
  variations     TicketVariation[]
}

model GlobalCommission {
  id         String   @id @default(cuid())
  name       String
  percentage Float
  isDefault  Boolean  @default(false)
  createdAt  DateTime @default(now())
}

model GlobalFixedExpense {
  id        String   @id @default(cuid())
  name      String
  amount    Float
  isDefault Boolean  @default(false)
  createdAt DateTime @default(now())
}

enum UserRole {
  USER
  ADMIN
}
